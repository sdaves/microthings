<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>XII. Admin processes</title>
<link href="stylesheet.css" type="text/css" rel="stylesheet" />
</head>
<body>
<h1>XII. Admin processes</h1>
<h2 id="run-adminmanagement-tasks-as-one-off-processes">Run admin/management tasks as one-off processes</h2><p>The process formation is the array of processes that are used to do the app's regular business (such as handling web requests) as it runs. Separately, developers will often wish to do one-off administrative or maintenance tasks for the app, such as:</p><ul><li>Running database migrations (e.g. <code>manage.py syncdb</code> in Django, <code>rake db:migrate</code> in Rails).</li><li>Running a console (also known as a REPL shell) to run arbitrary code or inspect the app's models against the live database. Most languages provide a REPL by running the interpreter without any arguments (e.g. <code>python</code> or <code>erl</code>) or in some cases have a separate command (e.g. <code>irb</code> for Ruby, <code>rails console</code> for Rails).</li><li>Running one-time scripts committed into the app's repo (e.g. <code>php scripts/fix_bad_records.php</code>).</li></ul><p>One-off admin processes should be run in an identical environment as the regular long-running processes of the app. They run against a release, using the same code and config as any process run against that release. Admin code must ship with application code to avoid synchronization issues.</p><p>The same dependency isolation techniques should be used on all process types. For example, if the Ruby web process uses the command <code>bundle exec thin start</code>, then a database migration should use <code>bundle exec rake db:migrate</code>. Likewise, a Python program using Virtualenv should use the vendored <code>bin/python</code> for running both the Tornado webserver and any <code>manage.py</code> admin processes.</p><p>Twelve-factor strongly favors languages which provide a REPL shell out of the box, and which make it easy to run one-off scripts. In a local deploy, developers invoke one-off admin processes by a direct shell command inside the app's checkout directory. In a production deploy, developers can use ssh or other remote command execution mechanism provided by that deploy's execution environment to run such a process.</p>
</body>
</html>
